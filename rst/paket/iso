#!/bin/bash
rm -rf $HOME/distro/iso
rm -rf $HOME/distro/initrd

#*****************glibc hazırlanmalı************************
cd $HOME/distro/build-glibc-2.38
make install DESTDIR=$HOME/distro/initrd
cd $HOME/distro/initrd/
ln -s lib lib64

#***************************bash**********************
cd $HOME/distro/build-readline-8.1
make install DESTDIR=$HOME/distro/initrd

cd $HOME/distro/build-ncurses-6.4
make install DESTDIR=$HOME/distro/initrd
cd $HOME/distro/initrd/lib
ln -s libncurses.so.6 libtinfo.so.6

cd $HOME/distro/build-bash-5.2.21
make install DESTDIR=$HOME/distro/initrd

#*****************busybox hazırlanmalı************************
cd $HOME/distro/busybox-1.36.1
cp ./busybox $HOME/distro/initrd/bin/busybox #sistemden kopyalandı..

#*****************kmod hazırlanacak***************************
cd $HOME/distro/build-kmod-31
make install DESTDIR=$HOME/distro/initrd

cd $HOME/distro/initrd/sbin
ln -s kmod sbin/depmod
ln -s kmod insmod
ln -s kmod lsmod
ln -s kmod modinfo
ln -s kmod modprobe
ln -s kmod rmmod

#****************modul yukleme*************************
#cd $HOME/distro/linux-6.6.2
#make bzImage modules
#INSTALL_MOD_PATH="$HOME/distro/initrd" make modules_install
#/sbin/depmod --all --basedir=initrd #modul indeksi oluşturluyor
mkdir -p $HOME/distro/initrd/lib/modules/
mkdir -p $HOME/distro/initrd/lib/modules/$(uname -r)
mkdir -p $HOME/distro/initrd/lib/modules/$(uname -r)/moduller

#for directory in {crypto,fs,lib} \
 #   drivers/{block,ata,md,firewire,ahci,sd} \
#    drivers/{scsi,message,pcmcia,virtio} \
#    drivers/usb/{host,storage}; 
#    	do
    	#echo ${directory}
    	#    misc \
#   find /lib/modules/$(uname -r)/kernel/${directory}/ -type f \
#        -exec install {} $HOME/distro/initrd/lib/modules/$(uname -r)/moduller/ \;
#	done
cp /lib/modules/$(uname -r)/kernel/* -rf $HOME/distro/initrd/lib/modules/$(uname -r)/moduller/ #sistemden kopyalandı..

/sbin/depmod --all --basedir=$HOME/distro/initrd #modul indeksi oluşturluyor
#*****************kurallar yüklenecek*************************
mkdir -p $HOME/distro/initrd/etc/udev/
mkdir -p $HOME/distro/initrd/lib/udev/
cp /etc/udev/rules.d -rf  $HOME/distro/initrd/etc/udev/
cp /lib/udev/rules.d -rf  $HOME/distro/initrd/lib/udev/
rm -rf $HOME/distro/initrd/lib/udev/rules.d/80-drivers.rules
rm -rf $HOME/distro/initrd/lib/udev/rules.d/80-debian-compat.rules
rm -rf $HOME/distro/initrd/lib/udev/rules.d/80-net-setup-link.rules
rm -rf $HOME/distro/initrd/lib/udev/rules.d/90-nm-thunderbolt.rules
rm -rf $HOME/distro/initrd/lib/udev/rules.d/73-seat-late.rules
#***************************udevd-udevadm**********************
cd $HOME/distro/build-eudev-3.2.14
make install DESTDIR=$HOME/distro/initrd

#***************************util-linux**********************
cd $HOME/distro/build-util-linux-2.39
make install DESTDIR=$HOME/distro/initrd
cp .libs/* -rf $HOME/distro/initrd/lib/
#***************************nano**********************
cd $HOME/distro/build-nano-7.2
make install DESTDIR=$HOME/distro/initrd
cd $HOME/distro/initrd
echo "INPUT(-lncursesw)" > $LFS/lib/libncurses.so
#******************libarchive**********************
cd $HOME/distro/build-libarchive-3.7.2
make install DESTDIR=$HOME/distro/initrd

#******************libcapng**********************
cd $HOME/distro/build-libcap-ng-0.8.3
make install DESTDIR=$HOME/distro/initrd

#*************************base-file kopyalanıyor*************************
cp $HOME/distro/base-files-0/* -rf $HOME/distro/initrd

#*************************curl kopyalanıyor*************************
cd $HOME/distro/build-curl-8.4.0
make install DESTDIR=$HOME/distro/initrd
#*************************openssl kopyalanıyor*************************
cd $HOME/distro/build-openssl-3.2.0
make install DESTDIR=$HOME/distro/initrd

cd $HOME/distro/initrd/etc/ssl && {
    wget -O cacert.pem https://curl.haxx.se/ca/cacert.pem
    mv -f cacert.pem cert.pem
    printf '%s\n' "${0##*/}: updated cert.pem"
}
#*************************libzstd kopyalanıyor*************************
cd $HOME/distro/zstd-1.5.5-kernel
make install DESTDIR=$HOME/distro/initrd
cp $HOME/distro/initrd/usr/local/* -rf $HOME/distro/initrd/

#*************************zlib kopyalanıyor*************************
cd $HOME/distro/build-zlib-1.3
make install DESTDIR=$HOME/distro/initrd

#*************************live-boot*************************
#cd $HOME/distro/live-boot
#make install DESTDIR=$HOME/distro/initrd
#********************udhcpc**************************
mkdir -p $HOME/distro/initrd/usr
mkdir -p $HOME/distro/initrd/usr/share
mkdir -p $HOME/distro/initrd/usr/share/udhcpc

cat >  $HOME/distro/initrd/usr/share/udhcpc/udhcpc.sh << EOF
#!/bin/sh
ip addr add $ip/$mask dev $interface
if [ "$router" ] ; then
  ip route add default via $router dev $interface
fi
EOF
#**************************init dosyası oluşturuluyor***********************************

cat >  $HOME/distro/initrd/init << EOF
#!/bin/busybox ash
/bin/busybox mkdir -p /bin
/bin/busybox --install -s /bin
#**********************************
export PATH=/sbin:/bin:/usr/bin:/usr/sbin

[ -d /dev ]  || mkdir -m 0755 /dev
[ -d /root ] || mkdir -m 0700 /root
[ -d /sys ]  || mkdir /sys
[ -d /proc ] || mkdir /proc
mkdir -p /tmp /run
touch /dev/null

# devtmpfs does not get automounted for initramfs
mount -t devtmpfs devtmpfs /dev
mount -t proc proc /proc
mount -t sysfs sysfs /sys
mount -t tmpfs tmpfs /tmp

#udevd --daemon --resolve-names=never #modprobe yerine kullanılıyor
#udevadm trigger --type=subsystems --action=add
#udevadm trigger --type=devices --action=add
#udevadm settle || true

#ethernet ip alması
#ip link set eth0 up
#udhcpc -i eth0 -s udhcpc.sh
#disk işlemleri
#echo "Disk İşlemleri......."
#modprobe ext4
mkdir -p disk
#diski bağlayalım

#mount /dev/sda1 disk
#sbin/depmod --all --basedir=/ #modul indeksi oluşturluyor
echo "deneme"

#/bin/busybox ash
/bin/bash

EOF

cat >  $HOME/distro/initrd/runudev << EOF
#!/bin/sh

udevd --daemon --resolve-names=never #modprobe yerine kullanılıyor
udevadm trigger --type=subsystems --action=add
udevadm trigger --type=devices --action=add
udevadm settle || true
EOF



chmod +x $HOME/distro/initrd/init 
cd $HOME/distro/initrd
find |cpio -H newc -o >../initrd.img



#************************iso *********************************
mkdir -p $HOME/distro/iso
mkdir -p $HOME/distro/iso/boot
mkdir -p $HOME/distro/iso/boot/grub
mkdir -p $HOME/distro/iso/live || true

#iso dizinine vmlinuz ve initrd.img dosyamız kopyalanıyor
#cp $HOME/distro/linux-6.6.2/arch/x86/boot/bzImage $HOME/distro/iso/boot/vmlinuz 
cp /boot/vmlinuz-$(uname -r) $HOME/distro/iso/boot/vmlinuz  #sistemde kullandığım kerneli kopyaladım istenirde kernel derlenebilir.
mv $HOME/distro/initrd.img $HOME/distro/iso/boot/initrd.img #oluşturduğumuz **initrd.img** dosyamızı taşıyoruz.

#squashfs dosyası oluşturuluyor iso dzinine kopyalanıyor
cd $HOME/distro/
mksquashfs initrd $HOME/distro/filesystem.squashfs -comp xz -wildcards
mv $HOME/distro/filesystem.squashfs $HOME/distro/iso/live/filesystem.squashfs

#grub menüsü oluşturuluyor..
cat > $HOME/distro/iso/boot/grub/grub.cfg << EOF
linux /boot/vmlinuz
initrd /boot/initrd.img
boot boot=live
EOF

#echo 'menuentry "Live GNU/Linux 64-bit" --class live {' > $HOME/distro/iso/boot/grub/grub.cfg
#echo '    linux /boot/vmlinuz boot=live quiet live-config --' >> liveiso/boot/grub/grub.cfg
#echo '    initrd /boot/initrd.img' >> $HOME/distro/iso/boot/grub/grub.cfg
#echo '}' >> $HOME/distro/iso/boot/grub/grub.cfg

grub-mkrescue $HOME/distro/iso/ -o $HOME/distro/distro.iso
#qemu-system-x86_64 -cdrom $HOME/distro/distro.iso -m 1G





